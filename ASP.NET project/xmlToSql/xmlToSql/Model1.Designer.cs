//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "MapsToEnvironments", "Environments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Environment), "Maps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Map))]
[assembly: EdmRelationshipAttribute("Model", "RoboSimulationsToAlgorithms", "Algorithms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Algorithm), "RoboSimulations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.RoboSimulation))]
[assembly: EdmRelationshipAttribute("Model", "RoboSimulationsToEnvironments", "Environments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Environment), "RoboSimulations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.RoboSimulation))]
[assembly: EdmRelationshipAttribute("Model", "RoboSimulationsToMaps", "Maps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Map), "RoboSimulations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.RoboSimulation))]
[assembly: EdmRelationshipAttribute("Model", "RoboSimulationsToRobots", "RoboSimulations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.RoboSimulation), "Robots", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Robot))]
[assembly: EdmRelationshipAttribute("Model", "RobotsToEnvironments", "Environments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Environment), "Robots", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Robot))]
[assembly: EdmRelationshipAttribute("Model", "RobotsToRotors", "Robots", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Robot), "Rotors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Rotor))]
[assembly: EdmRelationshipAttribute("Model", "RobotsToSensors", "Robots", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Robot), "Sensors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Sensor))]
[assembly: EdmRelationshipAttribute("Model", "RobotsToWheels", "Robots", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Robot), "Wheels", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(xmlToSql.Wheel))]

#endregion

namespace xmlToSql
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ASP_programmingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ASP_programmingEntities object using the connection string found in the 'ASP_programmingEntities' section of the application configuration file.
        /// </summary>
        public ASP_programmingEntities() : base("name=ASP_programmingEntities", "ASP_programmingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ASP_programmingEntities object.
        /// </summary>
        public ASP_programmingEntities(string connectionString) : base(connectionString, "ASP_programmingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ASP_programmingEntities object.
        /// </summary>
        public ASP_programmingEntities(EntityConnection connection) : base(connection, "ASP_programmingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Algorithm> Algorithms
        {
            get
            {
                if ((_Algorithms == null))
                {
                    _Algorithms = base.CreateObjectSet<Algorithm>("Algorithms");
                }
                return _Algorithms;
            }
        }
        private ObjectSet<Algorithm> _Algorithms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Environment> Environments
        {
            get
            {
                if ((_Environments == null))
                {
                    _Environments = base.CreateObjectSet<Environment>("Environments");
                }
                return _Environments;
            }
        }
        private ObjectSet<Environment> _Environments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Map> Maps
        {
            get
            {
                if ((_Maps == null))
                {
                    _Maps = base.CreateObjectSet<Map>("Maps");
                }
                return _Maps;
            }
        }
        private ObjectSet<Map> _Maps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoboSimulation> RoboSimulations
        {
            get
            {
                if ((_RoboSimulations == null))
                {
                    _RoboSimulations = base.CreateObjectSet<RoboSimulation>("RoboSimulations");
                }
                return _RoboSimulations;
            }
        }
        private ObjectSet<RoboSimulation> _RoboSimulations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Robot> Robots
        {
            get
            {
                if ((_Robots == null))
                {
                    _Robots = base.CreateObjectSet<Robot>("Robots");
                }
                return _Robots;
            }
        }
        private ObjectSet<Robot> _Robots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rotor> Rotors
        {
            get
            {
                if ((_Rotors == null))
                {
                    _Rotors = base.CreateObjectSet<Rotor>("Rotors");
                }
                return _Rotors;
            }
        }
        private ObjectSet<Rotor> _Rotors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sensor> Sensors
        {
            get
            {
                if ((_Sensors == null))
                {
                    _Sensors = base.CreateObjectSet<Sensor>("Sensors");
                }
                return _Sensors;
            }
        }
        private ObjectSet<Sensor> _Sensors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wheel> Wheels
        {
            get
            {
                if ((_Wheels == null))
                {
                    _Wheels = base.CreateObjectSet<Wheel>("Wheels");
                }
                return _Wheels;
            }
        }
        private ObjectSet<Wheel> _Wheels;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Algorithms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlgorithms(Algorithm algorithm)
        {
            base.AddObject("Algorithms", algorithm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Environments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnvironments(Environment environment)
        {
            base.AddObject("Environments", environment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Maps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaps(Map map)
        {
            base.AddObject("Maps", map);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoboSimulations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoboSimulations(RoboSimulation roboSimulation)
        {
            base.AddObject("RoboSimulations", roboSimulation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Robots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRobots(Robot robot)
        {
            base.AddObject("Robots", robot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rotors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRotors(Rotor rotor)
        {
            base.AddObject("Rotors", rotor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sensors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSensors(Sensor sensor)
        {
            base.AddObject("Sensors", sensor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wheels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWheels(Wheel wheel)
        {
            base.AddObject("Wheels", wheel);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Algorithm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Algorithm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Algorithm object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="diffEnvironments">Initial value of the diffEnvironments property.</param>
        /// <param name="multipleDestPoints">Initial value of the multipleDestPoints property.</param>
        /// <param name="complexity">Initial value of the complexity property.</param>
        /// <param name="depth">Initial value of the depth property.</param>
        public static Algorithm CreateAlgorithm(global::System.Int32 id, global::System.String name, global::System.String diffEnvironments, global::System.String multipleDestPoints, global::System.String complexity, global::System.String depth)
        {
            Algorithm algorithm = new Algorithm();
            algorithm.id = id;
            algorithm.name = name;
            algorithm.diffEnvironments = diffEnvironments;
            algorithm.multipleDestPoints = multipleDestPoints;
            algorithm.complexity = complexity;
            algorithm.depth = depth;
            return algorithm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String diffEnvironments
        {
            get
            {
                return _diffEnvironments;
            }
            set
            {
                OndiffEnvironmentsChanging(value);
                ReportPropertyChanging("diffEnvironments");
                _diffEnvironments = StructuralObject.SetValidValue(value, false, "diffEnvironments");
                ReportPropertyChanged("diffEnvironments");
                OndiffEnvironmentsChanged();
            }
        }
        private global::System.String _diffEnvironments;
        partial void OndiffEnvironmentsChanging(global::System.String value);
        partial void OndiffEnvironmentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String multipleDestPoints
        {
            get
            {
                return _multipleDestPoints;
            }
            set
            {
                OnmultipleDestPointsChanging(value);
                ReportPropertyChanging("multipleDestPoints");
                _multipleDestPoints = StructuralObject.SetValidValue(value, false, "multipleDestPoints");
                ReportPropertyChanged("multipleDestPoints");
                OnmultipleDestPointsChanged();
            }
        }
        private global::System.String _multipleDestPoints;
        partial void OnmultipleDestPointsChanging(global::System.String value);
        partial void OnmultipleDestPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String complexity
        {
            get
            {
                return _complexity;
            }
            set
            {
                OncomplexityChanging(value);
                ReportPropertyChanging("complexity");
                _complexity = StructuralObject.SetValidValue(value, false, "complexity");
                ReportPropertyChanged("complexity");
                OncomplexityChanged();
            }
        }
        private global::System.String _complexity;
        partial void OncomplexityChanging(global::System.String value);
        partial void OncomplexityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String depth
        {
            get
            {
                return _depth;
            }
            set
            {
                OndepthChanging(value);
                ReportPropertyChanging("depth");
                _depth = StructuralObject.SetValidValue(value, false, "depth");
                ReportPropertyChanged("depth");
                OndepthChanged();
            }
        }
        private global::System.String _depth;
        partial void OndepthChanging(global::System.String value);
        partial void OndepthChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToAlgorithms", "RoboSimulations")]
        public EntityCollection<RoboSimulation> RoboSimulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoboSimulation>("Model.RoboSimulationsToAlgorithms", "RoboSimulations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoboSimulation>("Model.RoboSimulationsToAlgorithms", "RoboSimulations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Environment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Environment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Environment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="travel_cost_enter">Initial value of the travel_cost_enter property.</param>
        /// <param name="travel_cost_in">Initial value of the travel_cost_in property.</param>
        /// <param name="damage">Initial value of the damage property.</param>
        public static Environment CreateEnvironment(global::System.Int32 id, global::System.String name, global::System.Decimal travel_cost_enter, global::System.Decimal travel_cost_in, global::System.Decimal damage)
        {
            Environment environment = new Environment();
            environment.id = id;
            environment.name = name;
            environment.travel_cost_enter = travel_cost_enter;
            environment.travel_cost_in = travel_cost_in;
            environment.damage = damage;
            return environment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal travel_cost_enter
        {
            get
            {
                return _travel_cost_enter;
            }
            set
            {
                Ontravel_cost_enterChanging(value);
                ReportPropertyChanging("travel_cost_enter");
                _travel_cost_enter = StructuralObject.SetValidValue(value, "travel_cost_enter");
                ReportPropertyChanged("travel_cost_enter");
                Ontravel_cost_enterChanged();
            }
        }
        private global::System.Decimal _travel_cost_enter;
        partial void Ontravel_cost_enterChanging(global::System.Decimal value);
        partial void Ontravel_cost_enterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal travel_cost_in
        {
            get
            {
                return _travel_cost_in;
            }
            set
            {
                Ontravel_cost_inChanging(value);
                ReportPropertyChanging("travel_cost_in");
                _travel_cost_in = StructuralObject.SetValidValue(value, "travel_cost_in");
                ReportPropertyChanged("travel_cost_in");
                Ontravel_cost_inChanged();
            }
        }
        private global::System.Decimal _travel_cost_in;
        partial void Ontravel_cost_inChanging(global::System.Decimal value);
        partial void Ontravel_cost_inChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> travel_cost_exit
        {
            get
            {
                return _travel_cost_exit;
            }
            set
            {
                Ontravel_cost_exitChanging(value);
                ReportPropertyChanging("travel_cost_exit");
                _travel_cost_exit = StructuralObject.SetValidValue(value, "travel_cost_exit");
                ReportPropertyChanged("travel_cost_exit");
                Ontravel_cost_exitChanged();
            }
        }
        private Nullable<global::System.Decimal> _travel_cost_exit;
        partial void Ontravel_cost_exitChanging(Nullable<global::System.Decimal> value);
        partial void Ontravel_cost_exitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal damage
        {
            get
            {
                return _damage;
            }
            set
            {
                OndamageChanging(value);
                ReportPropertyChanging("damage");
                _damage = StructuralObject.SetValidValue(value, "damage");
                ReportPropertyChanged("damage");
                OndamageChanged();
            }
        }
        private global::System.Decimal _damage;
        partial void OndamageChanging(global::System.Decimal value);
        partial void OndamageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "MapsToEnvironments", "Maps")]
        public EntityCollection<Map> Maps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Map>("Model.MapsToEnvironments", "Maps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Map>("Model.MapsToEnvironments", "Maps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToEnvironments", "RoboSimulations")]
        public EntityCollection<RoboSimulation> RoboSimulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoboSimulation>("Model.RoboSimulationsToEnvironments", "RoboSimulations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoboSimulation>("Model.RoboSimulationsToEnvironments", "RoboSimulations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToEnvironments", "Robots")]
        public EntityCollection<Robot> Robots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Robot>("Model.RobotsToEnvironments", "Robots");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Robot>("Model.RobotsToEnvironments", "Robots", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Map")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Map : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Map object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="map_data">Initial value of the map_data property.</param>
        /// <param name="denivelation">Initial value of the denivelation property.</param>
        public static Map CreateMap(global::System.Int32 id, global::System.String map_data, global::System.Decimal denivelation)
        {
            Map map = new Map();
            map.id = id;
            map.map_data = map_data;
            map.denivelation = denivelation;
            return map;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String map_data
        {
            get
            {
                return _map_data;
            }
            set
            {
                Onmap_dataChanging(value);
                ReportPropertyChanging("map_data");
                _map_data = StructuralObject.SetValidValue(value, false, "map_data");
                ReportPropertyChanged("map_data");
                Onmap_dataChanged();
            }
        }
        private global::System.String _map_data;
        partial void Onmap_dataChanging(global::System.String value);
        partial void Onmap_dataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal denivelation
        {
            get
            {
                return _denivelation;
            }
            set
            {
                OndenivelationChanging(value);
                ReportPropertyChanging("denivelation");
                _denivelation = StructuralObject.SetValidValue(value, "denivelation");
                ReportPropertyChanged("denivelation");
                OndenivelationChanged();
            }
        }
        private global::System.Decimal _denivelation;
        partial void OndenivelationChanging(global::System.Decimal value);
        partial void OndenivelationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "MapsToEnvironments", "Environments")]
        public EntityCollection<Environment> Environments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Environment>("Model.MapsToEnvironments", "Environments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Environment>("Model.MapsToEnvironments", "Environments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToMaps", "RoboSimulations")]
        public EntityCollection<RoboSimulation> RoboSimulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoboSimulation>("Model.RoboSimulationsToMaps", "RoboSimulations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoboSimulation>("Model.RoboSimulationsToMaps", "RoboSimulations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RoboSimulation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoboSimulation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoboSimulation object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="simulation_name">Initial value of the simulation_name property.</param>
        /// <param name="simulation_owner">Initial value of the simulation_owner property.</param>
        /// <param name="simulation_owner_email">Initial value of the simulation_owner_email property.</param>
        public static RoboSimulation CreateRoboSimulation(global::System.Int32 id, global::System.String simulation_name, global::System.String simulation_owner, global::System.String simulation_owner_email)
        {
            RoboSimulation roboSimulation = new RoboSimulation();
            roboSimulation.id = id;
            roboSimulation.simulation_name = simulation_name;
            roboSimulation.simulation_owner = simulation_owner;
            roboSimulation.simulation_owner_email = simulation_owner_email;
            return roboSimulation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String simulation_name
        {
            get
            {
                return _simulation_name;
            }
            set
            {
                Onsimulation_nameChanging(value);
                ReportPropertyChanging("simulation_name");
                _simulation_name = StructuralObject.SetValidValue(value, false, "simulation_name");
                ReportPropertyChanged("simulation_name");
                Onsimulation_nameChanged();
            }
        }
        private global::System.String _simulation_name;
        partial void Onsimulation_nameChanging(global::System.String value);
        partial void Onsimulation_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String simulation_owner
        {
            get
            {
                return _simulation_owner;
            }
            set
            {
                Onsimulation_ownerChanging(value);
                ReportPropertyChanging("simulation_owner");
                _simulation_owner = StructuralObject.SetValidValue(value, false, "simulation_owner");
                ReportPropertyChanged("simulation_owner");
                Onsimulation_ownerChanged();
            }
        }
        private global::System.String _simulation_owner;
        partial void Onsimulation_ownerChanging(global::System.String value);
        partial void Onsimulation_ownerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String simulation_owner_email
        {
            get
            {
                return _simulation_owner_email;
            }
            set
            {
                Onsimulation_owner_emailChanging(value);
                ReportPropertyChanging("simulation_owner_email");
                _simulation_owner_email = StructuralObject.SetValidValue(value, false, "simulation_owner_email");
                ReportPropertyChanged("simulation_owner_email");
                Onsimulation_owner_emailChanged();
            }
        }
        private global::System.String _simulation_owner_email;
        partial void Onsimulation_owner_emailChanging(global::System.String value);
        partial void Onsimulation_owner_emailChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToAlgorithms", "Algorithms")]
        public EntityCollection<Algorithm> Algorithms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Algorithm>("Model.RoboSimulationsToAlgorithms", "Algorithms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Algorithm>("Model.RoboSimulationsToAlgorithms", "Algorithms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToEnvironments", "Environments")]
        public EntityCollection<Environment> Environments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Environment>("Model.RoboSimulationsToEnvironments", "Environments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Environment>("Model.RoboSimulationsToEnvironments", "Environments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToMaps", "Maps")]
        public EntityCollection<Map> Maps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Map>("Model.RoboSimulationsToMaps", "Maps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Map>("Model.RoboSimulationsToMaps", "Maps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToRobots", "Robots")]
        public EntityCollection<Robot> Robots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Robot>("Model.RoboSimulationsToRobots", "Robots");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Robot>("Model.RoboSimulationsToRobots", "Robots", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Robot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Robot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Robot object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="owner">Initial value of the owner property.</param>
        /// <param name="robot_mesh_grid">Initial value of the robot_mesh_grid property.</param>
        /// <param name="speed">Initial value of the speed property.</param>
        /// <param name="speed_back">Initial value of the speed_back property.</param>
        /// <param name="turning_speed">Initial value of the turning_speed property.</param>
        /// <param name="turning_speed_back">Initial value of the turning_speed_back property.</param>
        public static Robot CreateRobot(global::System.Int32 id, global::System.String name, global::System.String owner, global::System.String robot_mesh_grid, global::System.Decimal speed, global::System.Decimal speed_back, global::System.Decimal turning_speed, global::System.Decimal turning_speed_back)
        {
            Robot robot = new Robot();
            robot.id = id;
            robot.name = name;
            robot.owner = owner;
            robot.robot_mesh_grid = robot_mesh_grid;
            robot.speed = speed;
            robot.speed_back = speed_back;
            robot.turning_speed = turning_speed;
            robot.turning_speed_back = turning_speed_back;
            return robot;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String owner
        {
            get
            {
                return _owner;
            }
            set
            {
                OnownerChanging(value);
                ReportPropertyChanging("owner");
                _owner = StructuralObject.SetValidValue(value, false, "owner");
                ReportPropertyChanged("owner");
                OnownerChanged();
            }
        }
        private global::System.String _owner;
        partial void OnownerChanging(global::System.String value);
        partial void OnownerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String robot_mesh_grid
        {
            get
            {
                return _robot_mesh_grid;
            }
            set
            {
                Onrobot_mesh_gridChanging(value);
                ReportPropertyChanging("robot_mesh_grid");
                _robot_mesh_grid = StructuralObject.SetValidValue(value, false, "robot_mesh_grid");
                ReportPropertyChanged("robot_mesh_grid");
                Onrobot_mesh_gridChanged();
            }
        }
        private global::System.String _robot_mesh_grid;
        partial void Onrobot_mesh_gridChanging(global::System.String value);
        partial void Onrobot_mesh_gridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal speed
        {
            get
            {
                return _speed;
            }
            set
            {
                OnspeedChanging(value);
                ReportPropertyChanging("speed");
                _speed = StructuralObject.SetValidValue(value, "speed");
                ReportPropertyChanged("speed");
                OnspeedChanged();
            }
        }
        private global::System.Decimal _speed;
        partial void OnspeedChanging(global::System.Decimal value);
        partial void OnspeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal speed_back
        {
            get
            {
                return _speed_back;
            }
            set
            {
                Onspeed_backChanging(value);
                ReportPropertyChanging("speed_back");
                _speed_back = StructuralObject.SetValidValue(value, "speed_back");
                ReportPropertyChanged("speed_back");
                Onspeed_backChanged();
            }
        }
        private global::System.Decimal _speed_back;
        partial void Onspeed_backChanging(global::System.Decimal value);
        partial void Onspeed_backChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal turning_speed
        {
            get
            {
                return _turning_speed;
            }
            set
            {
                Onturning_speedChanging(value);
                ReportPropertyChanging("turning_speed");
                _turning_speed = StructuralObject.SetValidValue(value, "turning_speed");
                ReportPropertyChanged("turning_speed");
                Onturning_speedChanged();
            }
        }
        private global::System.Decimal _turning_speed;
        partial void Onturning_speedChanging(global::System.Decimal value);
        partial void Onturning_speedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal turning_speed_back
        {
            get
            {
                return _turning_speed_back;
            }
            set
            {
                Onturning_speed_backChanging(value);
                ReportPropertyChanging("turning_speed_back");
                _turning_speed_back = StructuralObject.SetValidValue(value, "turning_speed_back");
                ReportPropertyChanged("turning_speed_back");
                Onturning_speed_backChanged();
            }
        }
        private global::System.Decimal _turning_speed_back;
        partial void Onturning_speed_backChanging(global::System.Decimal value);
        partial void Onturning_speed_backChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoboSimulationsToRobots", "RoboSimulations")]
        public EntityCollection<RoboSimulation> RoboSimulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoboSimulation>("Model.RoboSimulationsToRobots", "RoboSimulations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoboSimulation>("Model.RoboSimulationsToRobots", "RoboSimulations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToEnvironments", "Environments")]
        public EntityCollection<Environment> Environments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Environment>("Model.RobotsToEnvironments", "Environments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Environment>("Model.RobotsToEnvironments", "Environments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToRotors", "Rotors")]
        public EntityCollection<Rotor> Rotors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rotor>("Model.RobotsToRotors", "Rotors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rotor>("Model.RobotsToRotors", "Rotors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToSensors", "Sensors")]
        public EntityCollection<Sensor> Sensors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sensor>("Model.RobotsToSensors", "Sensors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sensor>("Model.RobotsToSensors", "Sensors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToWheels", "Wheels")]
        public EntityCollection<Wheel> Wheels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wheel>("Model.RobotsToWheels", "Wheels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wheel>("Model.RobotsToWheels", "Wheels", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Rotor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rotor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rotor object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="rotor_mesh_grid">Initial value of the rotor_mesh_grid property.</param>
        /// <param name="rotor_lifting_power">Initial value of the rotor_lifting_power property.</param>
        public static Rotor CreateRotor(global::System.Int32 id, global::System.String rotor_mesh_grid, global::System.Decimal rotor_lifting_power)
        {
            Rotor rotor = new Rotor();
            rotor.id = id;
            rotor.rotor_mesh_grid = rotor_mesh_grid;
            rotor.rotor_lifting_power = rotor_lifting_power;
            return rotor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rotor_mesh_grid
        {
            get
            {
                return _rotor_mesh_grid;
            }
            set
            {
                Onrotor_mesh_gridChanging(value);
                ReportPropertyChanging("rotor_mesh_grid");
                _rotor_mesh_grid = StructuralObject.SetValidValue(value, false, "rotor_mesh_grid");
                ReportPropertyChanged("rotor_mesh_grid");
                Onrotor_mesh_gridChanged();
            }
        }
        private global::System.String _rotor_mesh_grid;
        partial void Onrotor_mesh_gridChanging(global::System.String value);
        partial void Onrotor_mesh_gridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal rotor_lifting_power
        {
            get
            {
                return _rotor_lifting_power;
            }
            set
            {
                Onrotor_lifting_powerChanging(value);
                ReportPropertyChanging("rotor_lifting_power");
                _rotor_lifting_power = StructuralObject.SetValidValue(value, "rotor_lifting_power");
                ReportPropertyChanged("rotor_lifting_power");
                Onrotor_lifting_powerChanged();
            }
        }
        private global::System.Decimal _rotor_lifting_power;
        partial void Onrotor_lifting_powerChanging(global::System.Decimal value);
        partial void Onrotor_lifting_powerChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToRotors", "Robots")]
        public EntityCollection<Robot> Robots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Robot>("Model.RobotsToRotors", "Robots");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Robot>("Model.RobotsToRotors", "Robots", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Sensor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sensor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sensor object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="value_type">Initial value of the value_type property.</param>
        /// <param name="sensor_mesh_grid">Initial value of the sensor_mesh_grid property.</param>
        /// <param name="number_of_values_per_second">Initial value of the number_of_values_per_second property.</param>
        public static Sensor CreateSensor(global::System.Int32 id, global::System.String name, global::System.String value_type, global::System.String sensor_mesh_grid, global::System.Decimal number_of_values_per_second)
        {
            Sensor sensor = new Sensor();
            sensor.id = id;
            sensor.name = name;
            sensor.value_type = value_type;
            sensor.sensor_mesh_grid = sensor_mesh_grid;
            sensor.number_of_values_per_second = number_of_values_per_second;
            return sensor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String value_type
        {
            get
            {
                return _value_type;
            }
            set
            {
                Onvalue_typeChanging(value);
                ReportPropertyChanging("value_type");
                _value_type = StructuralObject.SetValidValue(value, false, "value_type");
                ReportPropertyChanged("value_type");
                Onvalue_typeChanged();
            }
        }
        private global::System.String _value_type;
        partial void Onvalue_typeChanging(global::System.String value);
        partial void Onvalue_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String sensor_mesh_grid
        {
            get
            {
                return _sensor_mesh_grid;
            }
            set
            {
                Onsensor_mesh_gridChanging(value);
                ReportPropertyChanging("sensor_mesh_grid");
                _sensor_mesh_grid = StructuralObject.SetValidValue(value, false, "sensor_mesh_grid");
                ReportPropertyChanged("sensor_mesh_grid");
                Onsensor_mesh_gridChanged();
            }
        }
        private global::System.String _sensor_mesh_grid;
        partial void Onsensor_mesh_gridChanging(global::System.String value);
        partial void Onsensor_mesh_gridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal number_of_values_per_second
        {
            get
            {
                return _number_of_values_per_second;
            }
            set
            {
                Onnumber_of_values_per_secondChanging(value);
                ReportPropertyChanging("number_of_values_per_second");
                _number_of_values_per_second = StructuralObject.SetValidValue(value, "number_of_values_per_second");
                ReportPropertyChanged("number_of_values_per_second");
                Onnumber_of_values_per_secondChanged();
            }
        }
        private global::System.Decimal _number_of_values_per_second;
        partial void Onnumber_of_values_per_secondChanging(global::System.Decimal value);
        partial void Onnumber_of_values_per_secondChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToSensors", "Robots")]
        public EntityCollection<Robot> Robots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Robot>("Model.RobotsToSensors", "Robots");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Robot>("Model.RobotsToSensors", "Robots", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Wheel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wheel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wheel object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="driving">Initial value of the driving property.</param>
        /// <param name="wheel_mesh_grid">Initial value of the wheel_mesh_grid property.</param>
        /// <param name="wheel_diameter">Initial value of the wheel_diameter property.</param>
        /// <param name="wheel_width">Initial value of the wheel_width property.</param>
        public static Wheel CreateWheel(global::System.Int32 id, global::System.String driving, global::System.String wheel_mesh_grid, global::System.Decimal wheel_diameter, global::System.Decimal wheel_width)
        {
            Wheel wheel = new Wheel();
            wheel.id = id;
            wheel.driving = driving;
            wheel.wheel_mesh_grid = wheel_mesh_grid;
            wheel.wheel_diameter = wheel_diameter;
            wheel.wheel_width = wheel_width;
            return wheel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String driving
        {
            get
            {
                return _driving;
            }
            set
            {
                OndrivingChanging(value);
                ReportPropertyChanging("driving");
                _driving = StructuralObject.SetValidValue(value, false, "driving");
                ReportPropertyChanged("driving");
                OndrivingChanged();
            }
        }
        private global::System.String _driving;
        partial void OndrivingChanging(global::System.String value);
        partial void OndrivingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String wheel_mesh_grid
        {
            get
            {
                return _wheel_mesh_grid;
            }
            set
            {
                Onwheel_mesh_gridChanging(value);
                ReportPropertyChanging("wheel_mesh_grid");
                _wheel_mesh_grid = StructuralObject.SetValidValue(value, false, "wheel_mesh_grid");
                ReportPropertyChanged("wheel_mesh_grid");
                Onwheel_mesh_gridChanged();
            }
        }
        private global::System.String _wheel_mesh_grid;
        partial void Onwheel_mesh_gridChanging(global::System.String value);
        partial void Onwheel_mesh_gridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal wheel_diameter
        {
            get
            {
                return _wheel_diameter;
            }
            set
            {
                Onwheel_diameterChanging(value);
                ReportPropertyChanging("wheel_diameter");
                _wheel_diameter = StructuralObject.SetValidValue(value, "wheel_diameter");
                ReportPropertyChanged("wheel_diameter");
                Onwheel_diameterChanged();
            }
        }
        private global::System.Decimal _wheel_diameter;
        partial void Onwheel_diameterChanging(global::System.Decimal value);
        partial void Onwheel_diameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal wheel_width
        {
            get
            {
                return _wheel_width;
            }
            set
            {
                Onwheel_widthChanging(value);
                ReportPropertyChanging("wheel_width");
                _wheel_width = StructuralObject.SetValidValue(value, "wheel_width");
                ReportPropertyChanged("wheel_width");
                Onwheel_widthChanged();
            }
        }
        private global::System.Decimal _wheel_width;
        partial void Onwheel_widthChanging(global::System.Decimal value);
        partial void Onwheel_widthChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RobotsToWheels", "Robots")]
        public EntityCollection<Robot> Robots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Robot>("Model.RobotsToWheels", "Robots");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Robot>("Model.RobotsToWheels", "Robots", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
